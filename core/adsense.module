<?php

/**
 * @file
 * Displays Google AdSense ads on Drupal pages.
 *
 * This is the core module of the AdSense package, with the Drupal hooks
 * and other administrative functions.
 */

use Drupal\Core\Routing\RouteMatchInterface;

use Drupal\adsense\AdsenseAdBase;
use Drupal\adsense\ContentAdBase;

// Ad types, link or ad.
define('ADSENSE_TYPE_LINK', 1);
define('ADSENSE_TYPE_AD', 2);
define('ADSENSE_TYPE_SEARCH', 3);

define('ADSENSE_MAX_CHANNELS', 10);
define('ADSENSE_AD_CHANNEL_DEFAULT', '');

/**
 * Implements hook_theme().
 */
function adsense_theme() {
  return array(
    'adsense_ad' => array(
      'variables' => array('content' => NULL, 'width' => NULL, 'height' => NULL, 'format' => NULL),
      'function' => 'theme_adsense_ad',
    ),
    'adsense_placeholder' => array(
      'variables' => array('content' => NULL, 'width' => NULL, 'height' => NULL, 'format' => NULL),
      'function' => 'theme_adsense_placeholder',
    ),
  );
}

/**
 * Default AdSense ad unit theming. Simply add a div with the adsense and $module classes
 *
 * @param array $vars
 *   string with the generated ad unit
 *
 * @return string
 *   string with the modified ad unit
 *
 * @ingroup themeable
 */
function theme_adsense_ad($vars) {
  if ((!empty($vars['width'])) && (!empty($vars['height']))) {
    $width = $vars['width'];
    $height = $vars['height'];
  } elseif (!empty($vars['format'])) {
    list($width, $height) = ContentAdBase::dimensions($vars['format']);
  }

  // Handle old argument names (ad instead of content)
  if (!empty($vars['content'])) {
    $content = $vars['content'];
  }
  elseif (!empty($vars['ad'])) {
    $content = $vars['ad'];
  }
  else {
    $content = '<-- empty ad content -->';
  }

  $style = ((!empty($width)) && (!empty($height))) ? "style='width:{$width}px;height:{$height}px;'" : '';

  return "<div class='adsense' ${style}>\n{$content}\n</div>";
}

/**
 * Generate a box to display instead of the ad when it is disabled
 *
 * @return string
 *   string with the HTML text to create the box
 *
 * @ingroup themeable
 */
function theme_adsense_placeholder($vars) {
  if ((!empty($vars['width'])) && (!empty($vars['height']))) {
    $width = $vars['width'];
    $height = $vars['height'];
  }
  elseif (!empty($vars['format'])) {
    list($width, $height) = ContentAdBase::dimensions($vars['format']);
  }

  // Handle old argument names (text instead of content)
  $content = \Drupal::config('adsense.settings')->get('adsense_placeholder_text');
  if (!empty($vars['content'])) {
    $content .= "<br/>" . $vars['content'];
  }
  elseif (!empty($vars['text'])) {
    $content .= "<br/>" . $vars['text'];
  }
  else {
    $content .= '<!-- empty ad content -->';
  }

  // Use inline style to set height and width
  $style = ((!empty($width)) && (!empty($height))) ? "style='width:" . ($width - 2) ."px;height:" . ($height - 2) . "px;'" : '';

  return "<div class='adsense adsense-placeholder' ${style}>\n{$content}\n</div>";
}


/**
 * Implements hook_help().
 */
function adsense_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.adsense':
      module_load_include('inc', 'adsense', 'help/adsense.help');
      return adsense_help_text();
  }
  return '';
}

/**
 * Generates the Google AdSense Ad
 *
 * @param array $args
 *   An array of arguments (format, group, channel or slot)
 *
 * A valid format must always be provided. If a slot is provided, the ad is generated by the
 * new format modules, if not then the 'old' format modules are attempted.
 *
 * @return array
 *   Render array with ad code.
 *
 */
function adsense_display($args) {
  if (!is_array($args)) {
    // 'old' method of calling this function is not supported in version >= 8.x
    // adsense_display($format = '160x600', $group = 1, $channel = 1, $slot = '', $referral = 0, $cpa = ''
    return '<!--adsense: old adsense_display call syntax not supported -->';
  }

  $ad = AdsenseAdBase::createAd($args);

  if (isset($ad)) {
    return $ad->display();
  }
  else {
    return '<!-- adsense: no ad generated. -->';
  }
}
