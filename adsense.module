<?php

function adsense_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      $output = t('Google AdSense module');
      break;
    case 'admin/settings/adsense':
      $output = t('This module provides web site admins the factility to display Google AdSense ads on their web site, thus earning revenue.
<h2>Supported Formats</h2>
<p>The following ad formats are supported:</p>
 <table>
 <tr><th>Type</th><th>Dimensions</th></tr>
 <tr><td>Banner</td><td>468x60</td></tr>
 <tr><td>Large Rectangle</td><td>336x280</td></tr>
 <tr><td>Skyscraper</td><td>120x600</td></tr>
 <tr><td>Wide Skyscraper</td><td>160x600</td></tr>
 <tr><td>Ad Links</td><td>120x90</td></tr>
 <tr><td>Wide Ad Links</td><td>160x90</td></tr>
 </table>
<h2>Configuring adsense module</h2>
<p>To use this module, configure the parameters below. The only required parameter is the your Google account Client ID. You can customize the colors and format if you want.</p>
<h2>Displaying AdSense Ads</h2>
<p>Ads can be displayed in blocks or in any phptemplate based theme.</p>
<p>To display ads, you call a function <code>adsense_display</code> and supply it with the following arguments.</p>
<ul>
<li>Format: This is a string of two numbers with an "x" in between. It can be any valid combination from the list provided above. If not specified, then 160x600 is assumed.</li>
<li>Group: This is the group that denotes the type (text or image) and color of the ad. This can be 1, 2 or 3. If not specified, then 1 is assumed.</li>
<li>Channel: This is the Custom Channel for the ad, as configured in AdSense. This is an optional parameter and if not specified, then 1 is assumed.</li>
</ul>
<h3>Blocks</h3>
<p>To display ads in blocks, add a new block, make its type "PHP", and enclose it in php tags.</p>
<pre><code>
print adsense_display("120x600", 1, 2);
</code></pre>
<p>If you want to make sure that you do not get errors if adsense module is accidentally disabled or deleted, then use the longer form:</p>
<pre><code>
if (module_exist("adsense"))
{
 print adsense_display("120x600", 2, 4);
}
</code></pre>
<h3>Themes</h3>
<p>You must use a phptemplate based theme to display ads from within the theme. This requires some familiarity with PHP. Edit the <strong>page.tpl.php</strong> file in your theme directory, and add:</p>
<pre><code>
print adsense_display("468x60");
</code></pre>
<p>Make sure you enclose it in php tags.</p>
<p>You could also use the longer format that protects you against deleting or disabling the module:<pre><code>
if (module_exist("adsense"))
{
 print adsense_display("120x600", 2, 4);
}
</code></pre> ');
      break;
  }

  return $output;
}
  
function adsense_menu($may_cache) {
  $items = array();

  if ($may_cache) {
    $items[] = array(
      'path'     => '',
      'callback' => '',
      'title'    => '',
      'access'   => user_access('hide adsense'),
      'weight'   => 0);
   }
   return $items;
}

function adsense_perm() {
  return array ('hide adsense');
}

function adsense_settings() {
  cache_clear_all('adsense', TRUE);
  $output .= form_textfield(t('Google AdSense Client ID'), 'adsense_client_id',
    variable_get('adsense_client_id', ''), 25, 25,
    t('This is the <strong>google_ad_client</strong> line in your Ad code, without the quotes. You must apply for an account with Google AdSense before you get this client ID. Please type it carefully. If you mistype it, your account will not get credited by Google for ads displayed on your site.'));

  $form_req = form_group(t('Required parameters'), $output);

  foreach(array(1,2,3) as $group) {

    $output = form_radios(t('Ad Type'), 'adsense_ad_type_' . $group, 
      variable_get('adsense_ad_type_' . $group, '000000'), array(t('Text'), t('Image')));

    $output .= form_textfield(t('Ad Text Color'), 'adsense_color_text_' . $group,
      variable_get('adsense_color_text_' . $group, '000000'), 6, 6);

    $output .= form_textfield(t('Ad Border Color'), 'adsense_color_border_' . $group,
      variable_get('adsense_color_border_' . $group, '336699'), 6, 6);

    $output .= form_textfield(t('Ad Background Color'), 'adsense_color_bg_' . $group,
      variable_get('adsense_color_bg_' . $group, 'FFFFFF'), 6, 6);

    $output .= form_textfield(t('Ad Title Color'), 'adsense_color_link_' . $group,
      variable_get('adsense_color_link_' . $group, '336699'), 6, 6);

    $output .= form_textfield(t('Ad URL Color'), 'adsense_color_url_' . $group,
      variable_get('adsense_color_url_' . $group, 'FF8C00'), 6, 6);
  
    $form_group .= form_group(t('Group ' . $group . ' Attributes'), $output);
  }

  $form_type = form_group(t('Ad Type and Colors'), $form_group);

  $output = '';
  foreach(array(1,2,3,4,5) as $channel) {
    $output .= form_textfield(t('Custom Channel ID'), 'adsense_ad_channel_' . $channel, 
      variable_get('adsense_ad_channel_' . $channel, ''), 50, 50);
    }

  $form_channel = form_group(t('Custom Channels'), $output, t('Enter up to 5 custom channels that you have configured in Google AdSense. If you are not using Custom Channels, or you are only using URL channels, then leave this empty'));

  $output = form_checkbox (t('Disable Google AdSense ads?'), 'adsense_disable', 1,
    variable_get('adsense_disable', '0'), t('This disables all display of Google AdSense Ads from your web site. This is useful in certain situations, such as site upgrades, or if you make a copy of the site for development and test purposes.'));

  $output .= form_checkbox (t('Placeholder when ads are disabled?'), 'adsense_placeholder', 1,
    variable_get('adsense_placeholder', '1'), t('This causes an empty box to be displayed in place of the ads when they are disabled.'));

  $output .= form_textarea(t('Placeholder Text to display'), 'adsense_placeholder_text',
    variable_get('adsense_placeholder_text', t('Google AdSense ad placeholder here')), 70, 5,
    t('Enter any text to display as a placeholder when ads are disabled.'));

  $form_adv = form_group(t('Advanced options'), $output);

  return $form_req . $form_type . $form_channel . $form_adv;
}  

function adsense_display($format = '160x600', $group = 1, $channel = 1) {

  if (!_adsense_validate_dimensions($format)) {
      $ad = '<!--adsense: invalid format: ' . $format . '-->';
  }
  else {
    // This ad format is not cached, generate it
    // Check first if disabled
    if (_adsense_check_disable()) {
      // Ads are disabled, check whether we have a placeholder
      if (_adsense_check_placeholder()) {
        // Display the placeholder
        $ad = '<!--adsense: placeholder-->' . _adsense_format_placeholder($format);
      }
      else {
        // Display nothing
        $ad = '<!--adsense: nothing -->';
      }
    }
    else {
      $cache_key = "adsense-$group-$format";
      $cache = cache_get($cache_key);
      if ($cache) {
        // This ad format is cached, use it
        $ad = '<!--adsense: cached-->' . $cache->data;
      }
      else {
        $ad = _adsense_format($format, $group, $channel);
        cache_set($cache_key, $ad, CACHE_PERMANENT);
      }
    }
  }

  return $ad;
}

function _adsense_check_disable() {

  $client_id   = variable_get('adsense_client_id', '');
  $disable_ads = variable_get('adsense_disable', '0');

  if (!$client_id) {
    // Google AdSense Client ID is not configured
    return true;
  }
  
  if ($disable_ads) {
    return true;
  }

  if (user_access('hide adsense')) {
    return true;
  }

  return false;
}

function _adsense_check_placeholder() {
  if (variable_get('adsense_placeholder', '1')) {
    // Ads are globally disabled and a place holder is set
    return true;
  }
  else {
    return false;
  }
}

function _adsense_format_placeholder($format) {

  $width   = _adsense_get_width($format);
  $height  = _adsense_get_height($format);

  $placeholder_text = variable_get('adsense_placeholder_text', t('Ad placeholder here'));

  $output  = '<div style="' .
  $output .= ' width:'  . $width  . 'px;';
  $output .= ' height:' . $height . 'px;';
  $output .= ' border:solid 1px">' . $placeholder_text . '</div>';

  return $output;
}

function _adsense_get_dimensions($format) {
  list($width, $height) = explode('x', $format);
  return array('width' => $width, 'height' => $height);
}

function _adsense_get_height($format) {
  $dims = _adsense_get_dimensions($format);
  return $dims['height'];
}

function _adsense_get_width($format) {
  $dims = _adsense_get_dimensions($format);
  return $dims['width'];
}

function _adsense_validate_dimensions($format) {

  $ret = true;

  switch($format) {
    case '468x60':
      break;
    case '336x280':
      break;
    case '160x600':
      break;
    case '120x600':
      break;
    case '120x90':
      break;
    case '160x90':
      break;
    default:
      $ret = false;
      break;
  }
  return $ret;
}

function _adsense_validate_group($group = 1) {
  switch($group) {
    case 1:
    case 2:
    case 3:
      return $group;
      break;
    default:
      // Default to 1 if an invalid group is supplied
      return 1;
      break;
  }
}

function _adsense_validate_channel($channel = 1) {
  switch($channel) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return $channel;
      break;
    default:
      // Default to 1 if an invalid group is supplied
      return 1;
      break;
  }
}

function _adsense_format($format, $group = 1, $channel = 1) {

  $group = _adsense_validate_group($group);

  $client = variable_get('adsense_client_id', '');

  $text   = variable_get('adsense_color_text_' .   $group, '000000');
  $border = variable_get('adsense_color_border_' . $group, '336699');
  $bg     = variable_get('adsense_color_bg_' .     $group, 'FFFFFF');
  $link   = variable_get('adsense_color_link_' .   $group, '336699');
  $url    = variable_get('adsense_color_url_' .    $group, 'FF8C00');

  $channel = variable_get('adsense_ad_channel_' . _adsense_validate_channel($channel), '');

  switch (variable_get('adsense_ad_type_' . $group, '0')) {
    case 2:
      $type = 'image';
      break;
    default:
      $type = 'text';
      break;
  }

  $width  = _adsense_get_width($format);
  $height = _adsense_get_height($format);

  switch ($height) {
    case '90':
      $format = $width . 'x' . $height . '_0ads_al_s';
      break;
    default:
      $format = $width . 'x' . $height . '_as';
      break;
    }

  $output .= _adsense_add_nl('');
  $output .= _adsense_add_nl('<script type="text/javascript"><!--');
  $output .= _adsense_add_nl('google_ad_client = "'    . $client  . '";');
  $output .= _adsense_add_nl('google_ad_type = "'      . $type    . '";');
  $output .= _adsense_add_nl('google_ad_channel = "'   . $channel . '";');
  $output .= _adsense_add_nl('google_ad_width = '      . $width   . ';');
  $output .= _adsense_add_nl('google_ad_height = '     . $height  . ';');
  $output .= _adsense_add_nl('google_ad_format = "'    . $format  . '";');
  $output .= _adsense_add_nl('google_color_border = "' . $border  . '";');
  $output .= _adsense_add_nl('google_color_bg = "'     . $bg      . '";');
  $output .= _adsense_add_nl('google_color_link = "'   . $link    . '";');
  $output .= _adsense_add_nl('google_color_url = "'    . $url     . '";');
  $output .= _adsense_add_nl('google_color_text = "'   . $text    . '";');
  $output .= _adsense_add_nl('//--></script>');
  $output .= _adsense_add_nl('<script type="text/javascript"');
  $output .= _adsense_add_nl(' src="http://pagead2.googlesyndication.com/pagead/show_ads.js">');
  $output .= _adsense_add_nl('</script>');

  return $output;
}

function _adsense_add_nl($str) {
  return $str . "\n";
}

?>
